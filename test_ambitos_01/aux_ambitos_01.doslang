{
    En este ejemplo se evalúa las sentencias:
    - cosntantes
    - alias en tipos
    - lectura y escritura de valores a traves de llamdas a metodos y funciones

    @autor: rainman sian
}

program aux_ambitos_01;
type
    int = intenger;
const
    ASISTENCIA_MINIMA : int = 3;
    PUNTOS_PENALIZACION : int = 5; (* puntos Falta el =*)
var
    no_asistencias : int = 0;
    asistio_parcial : boolean = false;(* la asignacion aqui es con = *)



function getNoAsistencias() : int;
begin
    getNoAsistencias := no_asistencias;
end;

procedure setAsistencias(no_asistencias_param : int); (* Estaba malo el paso de parametro*)
begin
    no_asistencias := no_asistencias_param;
end;

function isAsistioParcial() : boolean;
begin
    isAsistioParcial := asistio_parcial;
end;

procedure setAsistioParcial(asistio_parcial_param : boolean); (* Estaba malo el paso de parametro*)
begin
    asistio_parcial := asistio_parcial_param; (* Falta punto y coma *)
end;


function getASISTENCIA_MINIMA() : int; (* Falta punto y coma *)
begin
    getASISTENCIA_MINIMA := ASISTENCIA_MINIMA;
end;    


procedure clear();
begin
    no_asistencias := 0;
    asistio_parcial := false;
end;


function calcularNota(nota_obtenida: real) : real;
var
    penalizacion : int = 0; (* Asignacion es con = *)
begin

    if (no_asistencias < ASISTENCIA_MINIMA) then
        (**** 5 pts menos por cada inacistencia ****)
        penalizacion := (ASISTENCIA_MINIMA - no_asistencias) * PUNTOS_PENALIZACION; (* Asignacion es con := y falta punto y coma *)

    if (not asistio_parcial) then (* Falta then *)
        penalizacion := penalizacion + PUNTOS_PENALIZACION; (* Asignacion es con := y falta punto y coma *)

    Writeln("Calculo de penalización igual a: ", penalizacion);

    calcularNota := nota_obtenida - penalizacion;
end;

begin
    Writeln("No debería imprimir esto"); (* Falta punto y coma *)
    clear();
end.